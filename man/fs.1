.TH AUTOSYNC  "1" "August 2014" "" "User Commands"
.SH NAME
AutoSync \- Automatically synchronize files from source devices to a backup device when hot-plugged.
.SH SYNOPSIS
\fB fs\fR [\fIOPTION\fR]...
.SH DESCRIPTION
.\" Add any additional description here
.PP
AutoSync synchronizes files from source devices to a backup device. 
.br
It uses the device manager udev to dectect when new partitions are connected and to launch the AutoSync script.
.br
When the script is launched, it dectects wether the plugged partition is configured as a source or a a destination partition.
.br
Devices that are not configured exit the process.
.br

.br
Source partitions are the partitions from where you want to copy the data.
.br
Destination partitions, also named backup partitions, are the partition used to backup your data.
.br
Even if multiple backup partitions can be configured, only one should be connected at the same time. Otherwise behavior is undefined.
.br

.br
When a backup device is connected, the script creates the symlink /dev/backup to identify the backup partition.
.br

.br
When a source device is connected, the script waits by default 60 seconds until a backup device is connected, and then proceed to recursively copy the data to the backup partition. It then checks the integrity of the data with a hash function. An additional delete source step can be configurated.  
.br

.br
As this AutoSync was firstly designed for Raspberry Pi, there is an option to enable a status LED (backup disk connected) and a blinking LED (script launched). 
Many default behaviours can be altered by changing internal variables with the option --set.
.br
A list of your partitions (UUID and/or LABEL) can be obtained with the blkid utility.

.TP
\fB\-h\fR, \fB\-\-help\fR
Print this manual.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Verbose mode.
.TP
\fB\-D\fR, \fB-\-debug\fR
Print extra output variables for debugging purpose. This option implies verbose mode -v.
.TP
\fB\-i\fR, \fB\-\-initialize\fR
Simple script to initialize source and destination devices, as well as some variables.
.TP
\fB\-S\fR, \fB\-\-show\fR
Show all connected devices.
.TP
\fB\-b\fR, \fB\-\-bench\fR
Bench some hash functions.
.TP
\fB\-t\fR [\fIPART\fR], \fB\-\-test\fR
Test current configuration on \fBsource partition\fR \fIPART\fR. 
.TP
\fB\-a\fR [\fIUUID\fR|\fILABEL\fR], \fB\-\-add-source\fR
Add \fIUUID\fR or \fILABEL\fR as a source partition. UUID should be preferred to LABEL.
.TP
\fB\-r\fR [\fIUUID\fR|\fILABEL\fR], \fB\-\-remove-source\fR
Remove \fIUUID\fR or \fILABEL\fR from source partitions.
.TP
\fB\-A\fR [\fIUUID], \fB\-\-add-destination\fR
Add \fIUUID\fR as a destination partition.
.TP
\fB\-R\fR [\fIUUID], \fB\-\-remove-destination\fR
Remove \fIUUID\fR from destination partitions.

.TP
\fB\-d\fR [\fIVARS\fR], \fB\-\-reset-to-default\fR
Reset each variable contained in [\fIVARS\fR]. Variables should be \fBsemi-colon separated\fR and thus escaped.
.br 

.br 
[\fIVARS\fR] can contain \fB--all\fR, \fB--devices\fR, \fB--source\fR, \fB--destination\fR, \fB--vars\fR, \fB--default\fR or a variable name [\fIVAR\fR].
.br 
\fI--all           \fR Equivalent to '--devices;--vars'.
.br
\fI--devices       \fR Equivalent to '--source;--destination'.
.br
\fI--source        \fR Reset all source devices.
.br
\fI--destination   \fR Reset all destination devices.
.br
\fI--vars          \fR Reset all variables.
.br
\fI  VAR           \fR Reset variable \fIVAR\fR to its default value.

.TP
\fB\-s\fR [\fIVARS\fR], \fB\-\-set\fR
Set each variable contained in [\fIVARS\fR]. Variables should be \fBsemi-colon separated\fR and thus escaped.
.br 

.br 
[\fIVARS\fR] can contain \fB--source\fR, \fB--destination\fR, or a variable name [\fIVAR\fR].
.br 
\fI--source\fR=[\fBUUID\fR|\fBLABEL\fR],...       Set all source devices to the following UUID and LABEL list.
.br 
\fI--destination\fR=[\fBUUID\fR],...  Set all destination devices to the following UUID list.
.br
\fI  VAR\fR=[\fBVALUE\fR]             Set variable \fIVAR\fR to value \fBVALUE\fR.

.TP
\fB\-p\fR [\fIVARS\fR], \fB\-\-print\fR
Print each variable contained in [\fIVARS\fR], in order. Variables should be \fBsemi-colon separated\fR and thus escaped.
.br 

.br 
[\fIVARS\fR] can contain \fB--all\fR, \fB--devices\fR, \fB--source\fR, \fB--destination\fR, \fB--vars\fR, \fB--default\fR or a variable name [\fIVAR\fR].
.br 
\fI--all           \fR Equivalent to '--devices;--vars'.
.br
\fI--devices       \fR Equivalent to '--source;--destination'.
.br
\fI--source        \fR Print all devices that have been configured as source.
.br
\fI--destination   \fR Print all devices that have been configured as destination.
.br
\fI--vars          \fR Print all variables with their current values.
.br
\fI--default       \fR Print all variables with their default values.
.br
\fI  VAR           \fR Print variable \fIVAR\fR and its value. You can get a list of all the variables with the print option --vars.

.SG CONFIGURING ALTERNATIVE DEVICES
.SH AUTHOR
DiskSync was written by Jean-Baptiste Keck.
.SH "REPORTING BUGS"
Report fs bugs to the github repository.
.SH COPYRIGHT
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
udev(7), blkid(8)
